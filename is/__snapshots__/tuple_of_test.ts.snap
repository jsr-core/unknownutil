export const snapshot = {};

snapshot[`isTupleOf<T> > returns properly named predicate function 1`] = `
"isTupleOf([
  isNumber,
  isString,
  isBoolean
])"
`;

snapshot[`isTupleOf<T> > returns properly named predicate function 2`] = `"isTupleOf([(anonymous)])"`;

snapshot[`isTupleOf<T> > returns properly named predicate function 3`] = `
"isTupleOf([
  isTupleOf([
    isTupleOf([
      isNumber,
      isString,
      isBoolean
    ])
  ])
])"
`;

snapshot[`isTupleOf<T, R> > returns properly named predicate function 1`] = `
"isTupleOf([
  isNumber,
  isString,
  isBoolean
], isArray)"
`;

snapshot[`isTupleOf<T, R> > returns properly named predicate function 2`] = `"isTupleOf([(anonymous)], isArrayOf(isString))"`;

snapshot[`isTupleOf<T, R> > returns properly named predicate function 3`] = `
"isTupleOf([
  isTupleOf([
    isTupleOf([
      isNumber,
      isString,
      isBoolean
    ], isArray)
  ], isArray)
])"
`;

snapshot[`isTupleOf<R, T> > returns properly named predicate function 1`] = `
"isTupleOf(isArray, [
  isNumber,
  isString,
  isBoolean
])"
`;

snapshot[`isTupleOf<R, T> > returns properly named predicate function 2`] = `"isTupleOf(isArrayOf(isString), [(anonymous)])"`;

snapshot[`isTupleOf<R, T> > returns properly named predicate function 3`] = `
"isTupleOf([
  isTupleOf(isArray, [
    isTupleOf(isArray, [
      isNumber,
      isString,
      isBoolean
    ])
  ])
])"
`;

snapshot[`isTupleOf<T, R, L> > returns properly named predicate function 1`] = `
"isTupleOf([
  isNumber,
  isString,
  isBoolean
], isArray, [
  isNumber,
  isString,
  isBoolean
])"
`;

snapshot[`isTupleOf<T, R, L> > returns properly named predicate function 2`] = `"isTupleOf([(anonymous)], isArrayOf(isString), [(anonymous)])"`;

snapshot[`isTupleOf<T, R, L> > returns properly named predicate function 3`] = `
"isTupleOf([
  isTupleOf([
    isTupleOf([
      isNumber,
      isString,
      isBoolean
    ], isArray)
  ], isArray, [
    isTupleOf([
      isNumber,
      isString,
      isBoolean
    ], isArray)
  ])
])"
`;
